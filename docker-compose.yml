version: "3.7"
services:
  node-api:
    image: node-api
    networks:
      - redis-network
      - mongodb-network
      - postgres-network
    ports:
      - 6969:6969
    restart: always
    depends_on:
      - postgres-service
      - mongodb-service
      - redis-service
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile

  redis-service:
    image: redis:6-alpine
    container_name: redis-cache
    restart: on-failure
    networks:
      - redis-network
    expose:
      - "6379"
    volumes:
      - redis-volume:/data

  postgres-service:
    image: postgres:14
    restart: always
    container_name: postgres-db
    ports:
      - 5432:5432
    networks:
      - postgres-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=learning
    volumes:
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-volume:/var/lib/postgresql/data
  
  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - mongodb-network
    ports:
      - 8081:8081
    depends_on:
      - mongodb-service
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb-service:27017?authSource=admin

  mongodb-service:
    image: mongo:focal
    restart: always
    container_name: mongo-db
    expose:
      - "27017"
    networks:
      - mongodb-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongodb-volume:/data/db
      - mongodb-volume-config:/data/configdb

  pg-client:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin-client
    ports:
      - 6970:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=name@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    networks:
      - postgres-network
    


volumes:
  mongodb-volume-config:
    external: true
  postgres-volume:
    external: true
  mongodb-volume:
    external: true
  redis-volume:
    external: true

networks:
  redis-network:
    name: redis-network
    driver: bridge
  mongodb-network:
    name: mongodb-network
    driver: bridge
  postgres-network:
    name: postgres-network
    driver: bridge

  